class Solution {
public:
    bool isPalindrome(int x) {
if (x < 0)
    return false;
   
else {
    int t = x;
    long a = 0;
    while (x > 0) {
        a = x % 10 + a * 10;
        x = x / 10;
    }
    return (a == t);}


}
};
//1、一般思路👍：整形转化为字符串，依次翻转。不会string。。。
//2、不用字符串✌️：全翻转，个位开始，每次取x此位数（x%10）再加上已得的a等于新a，再把x已转换的位去掉（x=x/10）
//翻转过程可能出现溢出int（如123456789），因此a要用long int。
//3、不用字符串部分反转👌：循环以x>a为界，a最后比x小一位或等于x，避免了溢出，a就可以用int
class Solution {
public:
    bool isPalindrome(int x) {
if (x < 0)
    return false;
   
else {
    int t = x;
    int a = 0;
    while (x > a) {
        a = x % 10 + a * 10;
        x = x / 10;
    }
    return (a == t||x == a / 10);
}


}
};
